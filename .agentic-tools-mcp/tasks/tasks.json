{
  "projects": [
    {
      "id": "09ecf14e-3b75-41a1-a810-0ab557e821bc",
      "name": "Excel MCP Server 单元测试执行",
      "description": "运行excel-mcp-server项目的单元测试套件，包含18个测试文件的完整测试执行、结果分析和问题排查",
      "createdAt": "2025-08-21T01:35:03.998Z",
      "updatedAt": "2025-08-21T01:35:03.998Z"
    },
    {
      "id": "8884de6a-8d4f-4ba1-881f-09785101722f",
      "name": "ExcelWriter性能优化",
      "description": "Excel公式计算性能优化项目，主要解决evaluate_formula方法的性能问题。测试显示100次公式计算超过5秒的性能瓶颈，需要通过缓存机制、优化数据复制和减少I/O操作来提升性能。",
      "createdAt": "2025-08-21T01:56:15.362Z",
      "updatedAt": "2025-08-21T01:56:15.362Z"
    },
    {
      "id": "541ef521-eba9-4a8c-9c89-b92e6d386450",
      "name": "Excel MCP Server 测试清理",
      "description": "分析和清理excel-mcp-server项目中的单元测试，识别并删除过时的、重复的或不再需要的测试文件，优化测试套件结构",
      "createdAt": "2025-08-21T02:18:56.407Z",
      "updatedAt": "2025-08-21T02:18:56.407Z"
    },
    {
      "id": "456dd0e0-f926-4454-a4df-9137afecd983",
      "name": "Excel MCP服务器测试执行",
      "description": "在虚拟环境中运行excel-mcp-server项目的测试用例，确保代码质量和功能正确性",
      "createdAt": "2025-08-21T04:31:32.945Z",
      "updatedAt": "2025-08-21T04:31:32.945Z"
    },
    {
      "id": "6023eade-a6bd-48f4-8c32-94d34057cf68",
      "name": "测试文件冲突修复",
      "description": "解决Excel MCP服务器测试中的文件冲突问题，通过串行执行或独立文件副本来避免并发测试时的文件访问冲突",
      "createdAt": "2025-08-21T04:34:57.230Z",
      "updatedAt": "2025-08-21T04:34:57.230Z"
    }
  ],
  "tasks": [
    {
      "id": "c60b5dbd-9f9b-4a57-8ab0-ba6496db28e0",
      "name": "环境检查和依赖验证",
      "details": "检查项目依赖是否已安装，确认虚拟环境状态，验证测试环境配置是否正确",
      "projectId": "09ecf14e-3b75-41a1-a810-0ab557e821bc",
      "completed": false,
      "createdAt": "2025-08-21T01:35:10.782Z",
      "updatedAt": "2025-08-21T01:36:18.446Z",
      "dependsOn": [],
      "priority": 9,
      "complexity": 6,
      "status": "in-progress",
      "tags": [
        "环境配置",
        "依赖管理",
        "前置检查"
      ],
      "estimatedHours": 0.5,
      "level": 0
    },
    {
      "id": "f884bfbe-4897-40ac-8323-880a355428b7",
      "name": "实现缓存机制",
      "details": "实现ExcelWriter的缓存机制，避免重复加载工作簿和初始化xlcalculator。包括：\n1. 工作簿对象缓存（基于文件路径+修改时间）\n2. xlcalculator模型和评估器缓存\n3. 缓存失效机制（文件变更时）\n4. 内存使用优化（LRU清理策略）",
      "projectId": "8884de6a-8d4f-4ba1-881f-09785101722f",
      "completed": false,
      "createdAt": "2025-08-21T01:56:23.098Z",
      "updatedAt": "2025-08-21T01:59:50.376Z",
      "dependsOn": [],
      "priority": 9,
      "complexity": 8,
      "status": "in-progress",
      "tags": [
        "performance",
        "caching",
        "core"
      ],
      "estimatedHours": 4,
      "level": 0
    },
    {
      "id": "557121ce-b192-4a8e-a79e-e0dc27913272",
      "name": "优化数据复制策略",
      "details": "优化数据复制策略，只复制公式实际引用的数据范围。包括：\n1. 公式依赖分析（解析公式中的单元格引用）\n2. 智能范围提取（仅复制必要的数据）\n3. 支持跨工作表引用优化\n4. 减少内存占用和复制时间",
      "projectId": "8884de6a-8d4f-4ba1-881f-09785101722f",
      "completed": false,
      "createdAt": "2025-08-21T01:56:29.167Z",
      "updatedAt": "2025-08-21T01:56:29.167Z",
      "dependsOn": [],
      "priority": 8,
      "complexity": 7,
      "status": "pending",
      "tags": [
        "performance",
        "optimization",
        "data"
      ],
      "estimatedHours": 3,
      "level": 0
    },
    {
      "id": "eb55fab0-1f85-4f69-bc29-f5b6e4d91676",
      "name": "优化临时文件操作",
      "details": "减少或优化临时文件I/O操作。包括：\n1. 尽量使用内存工作簿操作\n2. 仅在必要时写入临时文件\n3. 优化临时文件的创建和清理\n4. 考虑使用内存映射文件等技术",
      "projectId": "8884de6a-8d4f-4ba1-881f-09785101722f",
      "completed": false,
      "createdAt": "2025-08-21T01:56:34.952Z",
      "updatedAt": "2025-08-21T01:56:34.952Z",
      "dependsOn": [],
      "priority": 7,
      "complexity": 5,
      "status": "pending",
      "tags": [
        "performance",
        "io",
        "temp-files"
      ],
      "estimatedHours": 2,
      "level": 0
    },
    {
      "id": "f8bb1b54-6201-4111-b418-d26fa27f83da",
      "name": "分析项目结构和源代码",
      "details": "分析src/excel_mcp目录结构，了解项目的主要功能模块、API接口、核心组件，为后续测试分析奠定基础。需要查看server.py、core/、models/、utils/等关键模块。",
      "projectId": "541ef521-eba9-4a8c-9c89-b92e6d386450",
      "completed": false,
      "createdAt": "2025-08-21T02:20:06.153Z",
      "updatedAt": "2025-08-21T02:21:03.177Z",
      "dependsOn": [],
      "priority": 9,
      "complexity": 5,
      "status": "done",
      "tags": [
        "analysis",
        "code-structure"
      ],
      "estimatedHours": 1,
      "level": 0,
      "actualHours": 0.5
    },
    {
      "id": "d4eb38b9-73e1-41ff-8b07-67fed4c94a21",
      "name": "详细分析所有测试文件",
      "details": "逐个分析tests目录中的17个测试文件，了解每个测试的目的、覆盖的功能、测试方法、依赖关系。记录每个测试文件的创建目的、测试范围、是否有重复功能。",
      "projectId": "541ef521-eba9-4a8c-9c89-b92e6d386450",
      "completed": false,
      "createdAt": "2025-08-21T02:20:12.035Z",
      "updatedAt": "2025-08-21T02:22:49.041Z",
      "dependsOn": [
        "f8bb1b54-6201-4111-b418-d26fa27f83da"
      ],
      "priority": 8,
      "complexity": 7,
      "status": "done",
      "tags": [
        "analysis",
        "testing"
      ],
      "estimatedHours": 3,
      "level": 0,
      "actualHours": 2
    },
    {
      "id": "9e5c55ee-613a-46d3-b417-aa292d15b635",
      "name": "识别过时和重复的测试",
      "details": "基于源代码分析和测试文件分析的结果，识别哪些测试文件是过时的。判断标准：1)测试的功能已不存在 2)有更新更全面的测试替代 3)测试代码有严重错误且不再维护 4)重复测试相同功能。",
      "projectId": "541ef521-eba9-4a8c-9c89-b92e6d386450",
      "completed": false,
      "createdAt": "2025-08-21T02:20:18.504Z",
      "updatedAt": "2025-08-21T02:23:41.596Z",
      "dependsOn": [
        "d4eb38b9-73e1-41ff-8b07-67fed4c94a21"
      ],
      "priority": 8,
      "complexity": 6,
      "status": "done",
      "tags": [
        "identification",
        "cleanup"
      ],
      "estimatedHours": 2,
      "level": 0,
      "actualHours": 1
    },
    {
      "id": "db6b76a5-8963-4f2a-9b81-01591bda47cc",
      "name": "删除过时测试文件",
      "details": "根据分析结果，删除已确认过时的测试文件，包括重复的公式测试、探索性测试、早期原型测试等。同时生成删除报告，说明删除的原因。",
      "projectId": "541ef521-eba9-4a8c-9c89-b92e6d386450",
      "completed": false,
      "createdAt": "2025-08-21T02:23:02.142Z",
      "updatedAt": "2025-08-21T02:24:54.117Z",
      "dependsOn": [
        "9e5c55ee-613a-46d3-b417-aa292d15b635"
      ],
      "priority": 7,
      "complexity": 4,
      "status": "done",
      "tags": [
        "cleanup",
        "deletion"
      ],
      "estimatedHours": 1,
      "level": 0,
      "actualHours": 0.5
    },
    {
      "id": "a5360295-c762-48c6-ba57-ba4cc307d99f",
      "name": "修复测试用例以适应当前API",
      "details": "根据用户要求，不修改API，而是调整测试用例以适应当前的API响应格式。主要需要修复：1)响应字段名不匹配 2)数据结构假设错误 3)metadata字段缺失等问题。",
      "projectId": "541ef521-eba9-4a8c-9c89-b92e6d386450",
      "completed": false,
      "createdAt": "2025-08-21T02:35:14.905Z",
      "updatedAt": "2025-08-21T02:35:20.508Z",
      "dependsOn": [],
      "priority": 9,
      "complexity": 8,
      "status": "in-progress",
      "tags": [
        "test-fix",
        "api-compatibility"
      ],
      "estimatedHours": 4,
      "level": 0
    },
    {
      "id": "ea5b542d-7eda-442b-b2eb-66ba80080d8d",
      "name": "激活虚拟环境",
      "details": "检查并激活虚拟环境，确保依赖包正确安装",
      "projectId": "456dd0e0-f926-4454-a4df-9137afecd983",
      "completed": false,
      "createdAt": "2025-08-21T04:31:38.813Z",
      "updatedAt": "2025-08-21T04:32:22.503Z",
      "dependsOn": [],
      "priority": 8,
      "complexity": 4,
      "status": "done",
      "tags": [
        "环境配置",
        "依赖管理"
      ],
      "estimatedHours": 0.5,
      "level": 0,
      "actualHours": 0.2
    },
    {
      "id": "530ac7a0-a8c2-4d29-8f82-5c4eb4a92e53",
      "name": "运行测试用例",
      "details": "运行项目的所有测试用例，包括单元测试和集成测试，生成覆盖率报告",
      "projectId": "456dd0e0-f926-4454-a4df-9137afecd983",
      "completed": false,
      "createdAt": "2025-08-21T04:31:44.652Z",
      "updatedAt": "2025-08-21T04:33:27.536Z",
      "dependsOn": [
        "ea5b542d-7eda-442b-b2eb-66ba80080d8d"
      ],
      "priority": 9,
      "complexity": 6,
      "status": "done",
      "tags": [
        "测试",
        "质量保证",
        "覆盖率"
      ],
      "estimatedHours": 1,
      "level": 0,
      "actualHours": 0.8
    },
    {
      "id": "b15e14d1-403a-4259-9336-534e34e3235a",
      "name": "实现独立文件副本方案",
      "details": "修改conftest.py，为每个测试创建唯一的Excel文件名，避免并发访问同一文件导致的冲突",
      "projectId": "6023eade-a6bd-48f4-8c32-94d34057cf68",
      "completed": false,
      "createdAt": "2025-08-21T04:35:03.105Z",
      "updatedAt": "2025-08-21T04:37:05.151Z",
      "dependsOn": [],
      "priority": 8,
      "complexity": 5,
      "status": "done",
      "tags": [
        "文件处理",
        "测试优化",
        "并发安全"
      ],
      "estimatedHours": 0.5,
      "level": 0,
      "actualHours": 0.3
    }
  ],
  "subtasks": [],
  "migration": {
    "version": "1.8.1"
  }
}